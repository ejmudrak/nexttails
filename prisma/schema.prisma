// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

enum Unit {
  CUP
  DASH
  NONE
  OUNCE
  TABLESPOON
  TEASPOON
}

enum Difficulty {
  EASY
  MEDIUM
  HARD
}

model Tag {
  id       Int    @id @default(autoincrement())
  name     String @db.VarChar(255)
  recipe   Recipe @relation(fields: [recipeId], references: [id])
  recipeId Int

  @@unique([name, recipeId])
}

model Tool {
  id          Int     @id @default(autoincrement())
  name        String  @db.VarChar(255)
  description String?
  recipeId    Int
  recipe      Recipe? @relation(fields: [recipeId], references: [id])

  @@unique([name, recipeId])
}

model Glass {
  id          Int      @id @default(autoincrement())
  name        String   @unique @db.VarChar(255)
  description String?
  recipe      Recipe[]
}

model Step {
  id          Int    @id @default(autoincrement())
  description String
  recipe      Recipe @relation(fields: [recipeId], references: [id])
  recipeId    Int
}

model Ingredient {
  id       Int    @id @default(autoincrement())
  name     String @db.VarChar(255)
  amount   Int
  unit     Unit
  recipe   Recipe @relation(fields: [recipeId], references: [id])
  recipeId Int

  @@unique([name, amount, recipeId])
}

model Recipe {
  id          Int          @id @default(autoincrement())
  name        String       @unique @db.VarChar(255)
  description String
  image       String?      @db.VarChar(255)
  color       String       @default("#A5D4FF") @db.Char(7)
  difficulty  Difficulty
  tools       Tool[]
  tags        Tag[]
  steps       Step[]
  ingredients Ingredient[]
  glass       Glass        @relation(fields: [glassId], references: [id])
  glassId     Int
}
